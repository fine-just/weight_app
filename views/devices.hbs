
 <head>    


  
      <link rel="stylesheet" href="/css/device.css" />
      <link rel="stylesheet" href="/css/navigations_bar.css" />
    
<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/data.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
  <script src="https://cdn.socket.io/4.4.1/socket.io.min.js"></script>
 </head>


<div class="parent"> 

<!--
<div id="map" class="div_map" >
    <canvas id="myChart1" ></canvas>
</div>
     
     
 <canvas id="myChart" class="div_map" ></canvas>  -->
 <div id="outer">
   <div class="graph">
     <div style="display: flex;"> <h4 class='title' style="display:none;"id='{{device}}'>{{device}}</h4>
      <div>
            <button class="dot" onclick="more_options()"id="dbutton"><img  src="https://image.flaticon.com/icons/png/512/57/57085.png" class="down_btn"></button>
            {{#if username}}
             <button class="dot1" onclick="open_settings()"id="dbutton1"><img  src="https://upload.wikimedia.org/wikipedia/commons/thumb/6/6d/Windows_Settings_app_icon.png/768px-Windows_Settings_app_icon.png" class="down_btn1"></button>
            

                  
<div class="settings" style="display: none;">
  <iframe name="dummyframe" id="dummyframe" style="display: none;"></iframe>
  
  <form action="/change_device_settings2" method="post" >
  <label for="change state" id="device_id">scale_0&nbsp;is on</label>
  
    <br><label for="change_state" id="change_state1">Turn off Device</label>
  <input type="checkbox" id="change_state" name="change_state" onclick="change_options()" value="0"><br>
  <div id="all_options"> 
    <label for="press_mode">press mode</label>
    <input type="radio" id="psm" onclick="test2()" name="mode" value="press_mode"><br>
    <label for="psm">power save mode</label>
    <input type="radio" id="psm1" onclick="test()" name="mode" value="psm"><br>
    <label for="reqular0">reqular mode</label>
    <input type="radio" id="reqular0" onclick="test1()" name="mode" value="reqular" style="outline: none;"><br>
    <div id="more_options" style="display: block;"><input type="text" name="device_id" value="0" style="display: none;" readonly="">
    <label for="sample_rate" id="sample_rate_label">Choose sample rate(seconds)</label><br>
    
    <input id="rangeInput" name="sample_rate" type="range" min="30" max="60" value="43" oninput="amount.value=rangeInput.value">
    <input id="amount" type="number" value="43" min="30" max="60" oninput="rangeInput.value=amount.value"><br></div></div>
    <input type="submit" value="Save Changes" class="btn"></form>
  

</div>

{{/if}}
        </div>
     </div>
     <div class="other_device">
       <ul class="list_devices">
        
       </ul>
     </div>

      <hr style="background-color: antiquewhite;">
       <figure class="highcharts-figure">
        <div id="container"></div>
        <p class="highcharts-description">
   </div>

   
<div class="devices">
   
<h2 id='scale' style="color: aliceblue;">History</h2>
<p style="display:none">{{lim}}</p>

<div style="color: aliceblue;">Υπάρχουν <div id='metriseis' style="color: aliceblue;">{{id.0.row1}}</div> Μετρήσεις</div> 
<table class='tasks' id="list">

    <tr>
     
      <td>Weight</td>
      <td>Lognitude</td>
      <td>Latitude</td>
      <td>Date-time</td>
      <td>
       
      
        <label for="limit">choose data:</label>
        <select id="limit" name="{{lim}}" onchange="change_ref();">
     
        <option value={{lim}} >{{lim}}</option> 
         
          
        </select>
      <button  value="Get Data"  ><a id='limit1' style="color: #2b2b2b; text-decoration: none;" href='/device/{{device}}/limit/{{lim}}'>more data</a></button>
     
      </td>
  
    </tr>
    {{#each id }}
   
    <tr>
    
        <td> <p class='weight' > {{weight}}</p> </td>
         <td><p class="lognitude" >{{long}}</p></td>
         <td><p class="latitude" >{{lang}} </p></td>
        <td> <p class="date-time"> {{date_time}}</p></td>

       
       
    </tr>
 
    {{/each}}
</table>

</div>

</div>

</div>




<script>
  const socket = io();

//get request to take the device name and the name of the other devices
//we use it ,to create an option to go the the others devices history without going back to the homepage
//when the down button is clicked ,it open the names of the other devices and when a name is clicked ,it redirects
//the clicked device history
 async function name_devices () {
   fetch('/name_devices')
      .then( async (response) => {

        // get json response here
        let data = await response.json();
        
        
        if(response.status === 200){
         // Process data here
        }else{
         // Rest of status codes (400,500,303), can be handled here appropriately
        }
        console.log(data)
        var title=document.getElementsByClassName('title')[0].innerText
        for(j=0;j<data.length;j++){
          if(data[j].device_id==title){
              document.getElementsByClassName('title')[0].innerText=data[j].device_name
              document.getElementsByClassName('title')[0].id=data[j].device_id
              document.getElementsByClassName('title')[0].style.display='block'
          }
        }
        var ul=document.getElementsByClassName('list_devices')[0]
        for(i=0;i<data.length;i++){
          var li=document.createElement('li')
          var a=document.createElement('a')
          if(data[i].device_id!=title){
            a.href=`/device/${data[i].device_id}`
            a.innerText=data[i].device_name
            a.id='list_a'
            li.appendChild(a)
            ul.appendChild(li)
          }

        }

      })
      .catch((err) => {
          console.log(err);
      })
     
}
//get request ,that returns the current settings of the device
//and creates the form settings ,so if the user wants to change it ,they can
async function device_settings () {
  var device_id1=document.getElementsByClassName('title')[0].id
  
  console.log(name)
  var string1='/device/state/'+String(device_id1)
   fetch(string1)
      .then( async (response) => {

        // get json response here
        let data = await response.json();
        
        
        if(response.status === 200){
         // Process data here
        }else{
         // Rest of status codes (400,500,303), can be handled here appropriately
        }

       console.log(data.mode)
  var current_state=document.getElementById('device_id')
  var is_on
  
  //console.log('chec')
         
        console.log(data.device[0])
        data=data.device[0]
        var device_name=document.getElementsByClassName('title')[0].innerText
      
        var is_on
        var change_is
        var state_value
        var change_state
        var t1=document.getElementById('all_options')
        //console.log(t1.style.display)
        console.log('AAA')
        
        if(data.is_on==1){
          is_on='on'
          change_state='0'
          change_is='off'
          state_value=0
          t1.style.display='block'

        }
        else if(data.is_on==0){
          is_on='off'
          change_is='on'
          change_state='1'
          state_value=1
          t1.style.display='none'
        }
    
        var label_state=document.getElementById('device_id')
        label_state.innerText=data.device_name +' is ' +is_on
        document.getElementById('change_state1').innerText=' Turn '+change_is+' Device'

        var checkbox=document.getElementById('change_state')
        checkbox.value=change_state

        var in_pressmode=document.getElementById('psm')
        var in_psm=document.getElementById('psm1')
        var in_reqular=document.getElementById('reqular0')
        var more_options=document.getElementById('more_options')
        if(data.mode=='press_mode'){
          in_pressmode.checked=true

          in_reqular=false
          in_psm.checked=false
          var r1=document.getElementById('more_options')
          r1.style.display='none'
        }
        if(data.mode=='psm'){
          more_options.style.display='block'
          in_pressmode=false
          in_reqular=false
          in_psm.checked=true
          document.getElementById('sample_rate_label').innerText='Choose sample rate(hours)'
          document.getElementById('amount').value=data.sample_rate
          document.getElementById('amount').min=1
          document.getElementById('amount').max=6
        }
        if(data.mode=='reqular'){
          in_reqular.checked=true

          in_pressmode=false
          
          in_psm.checked=false
          more_options.style.display='block'

          document.getElementById('sample_rate_label').innerText='Choose sample rate(seconds)'
          document.getElementById('amount').value=data.sample_rate
            document.getElementById('amount').min=15
          document.getElementById('amount').max=100
       }


      })
      .catch((err) => {
          console.log(err);
      })
     
}

//we call the get requests functions
 name_devices()
device_settings()

//function to open the settings ,when the settings option is clicked
function open_settings(){
  if(document.getElementsByClassName('settings')[0].style.display=='block'){
    document.getElementsByClassName('settings')[0].style.display='none'
  }
  else if(document.getElementsByClassName('settings')[0].style.display=='none'){
    document.getElementsByClassName('settings')[0].style.display='block'
  }
  
}

  function more_options(){
    //console.log('ww')
    var div_dev=document.getElementsByClassName("other_device")
    if(div_dev[0].style.display!='none'){
      div_dev[0].style.display='none'
    }
    else{
      div_dev[0].style.display='block'
    }
  }
  var down_btn=document.getElementById('dbutton')
  //down_btn.onclick=more_options


  

//functions to change the date_time
  function padTo2Digits(num) {
  return num.toString().padStart(2, '0');
}

function formatDate(date) {
  return (
    [
      date.getFullYear(),
      padTo2Digits(date.getMonth() + 1),
      padTo2Digits(date.getDate()),
    ].join('-') +
    ' ' +
    [
      padTo2Digits(date.getHours()),
      padTo2Digits(date.getMinutes()),
      padTo2Digits(date.getSeconds()),
    ].join(':')
  );
}


//function change_ref to change the limit of the device data 
  function change_ref(){
    var opt=document.getElementById('limit')
    var new_lim=opt.options[opt.selectedIndex].value
    var a =document.getElementById('limit1')
    //var href=a.href.substring(0,37)
    var href =a.href.substring(0,51)
    href=href+String(new_lim)
    a.href=href
    //console.log(a.href)
  }
  var metriseis=document.getElementById('metriseis');
  var row1=parseInt(metriseis.innerText)
  var select = document.getElementById('limit');
  var current_lim=parseInt(select.name)
  if(row1>20){
    // <select id="limit" name="limit">
    //<option value="20">20</option>
    var opt_data=[]
    var option
    var i
    for(i=10;i<=row1;i=i+10){
      if(i!=current_lim){
      option=document.createElement('option');
      option.value=i
      option.innerHTML=i
     
      select.appendChild(option)}
    }
    
  }
  
  //we take the data of the device ,so we can create the graph
  var wei=document.getElementsByClassName("weight");
  var date=document.getElementsByClassName("date-time");
  
  var string1
  var weights=[]
  var dates=[]
  var times=[]
  var xValues=[]
  var yValues=[]
  var data1=[]
  for(var i=0;i<date.length;i++){
    var a=date[i].innerText;
     var a=a.slice(0,-5)
    //var da=new Date(a.substring(0,a.length-1));
    
    var da=new Date(a);

    //console.log(da.toLocaleDateString())
    date[i].innerText=da.toLocaleString()

    dates.push(da.toLocaleString())
   
    weights.push(wei[i].innerText)
    yValues.push(parseFloat(wei[i].innerText))
    
    //string1.slice(0, string1.indexOf(',')) + string1.slice(string1.indexOf(',') + 1, str.length))
    //xValues.push( string1.slice(0, string1.indexOf(',')) + string1.slice(string1.indexOf(',') + 1, string1.length))
    xValues.push(da)
    data1.push([/*formatDate(da)*/da.valueOf(),parseFloat(wei[i].innerText)])
  }
  
 
    
//var xValues = [50,52,70,80,90,102,103,120,130,140,150];
//var yValues = [7,8,8,9,9,9,10,11,14,14,15];

//var xValues=[new Date('2020-09-30T21:00:00.000Z').toLocaleString(),new Date('2020-09-30T23:00:00.000Z').toLocaleString()]
//var yValues=[52.3,22.2]

data={
  xValues,
  yValues
}

var a1=[]

for(i=0;i<data1.length;i++){
    a1.push(data1[0])
 }
function newDate(days) {
  return moment().add(days, 'd');
}

//we create the graph using Highcarts

Highcharts.setOptions({
    time: {
        timezoneOffset: -2*60
    }
});
var chart=new Highcharts.chart('container', {
  chart: {
    type: 'spline'
  },
  title: {
    text: 'Weights of device'
  },
  
  subtitle: {
    text: 'Irregular time data in Highcharts JS'
  },
  xAxis:[{
  
       type: 'datetime',
       time:{
         useUTC:false
       },
      
    
    labels: {
        formatter: function() {
          return Highcharts.dateFormat('%e/%m/%Y<br>%H:%M:%S', this.value);
        }
      },

    title: {
      text: 'Date'
    }
  }],
  yAxis: {
    title: {
      text: 'Weight (kg)'
    },
    min: 0
  },
  tooltip: {
    //headerFormat: '<b>{series.name}</b><br>',
    pointFormat: '{point.x:%e. %b.%Y}: {point.y:.2f} kg'
  },

  plotOptions: {
    series: {
      marker: {
        enabled: true
      }
    }
  },

  colors: ['#6CF', '#39F', '#06C', '#036', '#000'],

  // Define the data points. All series have a dummy year
  // of 1970/71 in order to be compared on the same x axis. Note
  // that in JavaScript, months start at 0 for January, 1 for February etc.
  series: [{
    name: "Scale measurements ",
    data:data1
    
    
    
  }],
  responsive: {
    rules: [{
      condition: {
        maxWidth: 500
      },
      chartOptions: {
        plotOptions: {
          series: {
            marker: {
              radius: 2.5
            }
          }
        }
      }
    }]
  }
});


  //function to append the data in table and graph

  function append_data(data){
    var table=document.getElementById('list')
    var new_html=`<tr>
      <!--<a href="/device/{{id}}"target="_self" class="a1" > -->
     
      
     <!-- <div class="weight_button" id='button${data.id}' onclick="OpenPopUp(${data.id})">&nbsp;-->
        <td> <p class='weight' > ${data.weight}</p> </td>
         <td><p class="lognitude" >${data.long}</p></td>
         <td><p class="latitude" >${data.lang} </p></td>
        <td> <p class="date-time">${data.date_time}</p></td>
    </tr>`
   
    table.innerHTML=table.innerHTML+new_html

    //for chart
    var d=new Date(data.date_time)
    var new_data=[d.valueOf(),data.weight]
    chart.series[0].addPoint(new_data,false)
    chart.redraw()

    //
    var sum_metr=document.getElementById('metriseis')
    sum_metr.innerText=parseInt(sum_metr.innerText)+1
  }


    var dev_id=document.getElementsByClassName('title')[0].id
    var string2='new_weight'+dev_id
    //socket to listen when new data of the device is submitted
   socket.on(string2,(message)=>{
     
      //console.log(message)
      append_data(message)

   })



//the functions to change the form ,depending the mode of the device 
//for example when we want the device to turn off ,we cant change the mode and sample rate
//or when we want to have reqular mode the sample rate is 10 to 60 seconds ,but in psm mode is 1 to 6 hours
//so when an option is chosen ,it calls one of those functions to change the form settings

function test(){
              console.log('hello there')
              var r1=document.getElementById('more_options')
              r1.style.display='block'
              var t=rangeInput
              var t1=amount
              var r=document.getElementById('sample_rate_label')
              r.innerText=''
              r.innerText='Choose sample rate(hours)'
              
              t.min='1'
              t1.min='1'
              t.value='1'
              t1.value='1'
              t.max='6'
              t1.max='6'
          }
          function test1(){
              console.log('hello there')
              var r1=document.getElementById('more_options')
              r1.style.display='block'
              var r=document.getElementById('sample_rate_label')
              r.innerText=''
              r.innerText='Choose sample rate(seconds)'
              var t=rangeInput
              var t1=amount
              
              t.min='30'
              t1.min='30'
              t.value='30'
              t1.value='30'
              t.max='60'
              t1.max='60'
          }
          function test2(){
              console.log('hello there')
              var r1=document.getElementById('more_options')
              r1.style.display='none'
            
          }
          function change_options(){
            var r1=change_state
            var t1=document.getElementById('all_options')
            console.log(r1.checked)
            if(t1.style.display=='none'){
              t1.style.display='block'
            }
            else{
              t1.style.display='none'
            }
          }

var id=document.getElementsByClassName('title')[0].id
var sock='new_state'+id

//socket to listen when the device's settings are changed
socket.on(sock,(data)=>{
  
  console.log(data.mode)
  var current_state=document.getElementById('device_id')
  var is_on
  
  console.log('chec')
         
        //console.log(data)
        var device_name=document.getElementsByClassName('title')[0].innerText
        if(current_state==`${device_name} is on`){
          is_on=1
        }
        else if(current_state==`${device_name} is off`){
          is_on=1
        }
        var is_on
        var change_is
        var state_value
        var t1=document.getElementById('all_options')
        //console.log(t1.style.display)
        
        
        if(data.change_state==undefined ||data.change_state=='1'){
          is_on='on'
          change_is='off'
          state_value=0
          t1.style.display='block'

        }
        else if(data.change_state=='0'){
          is_on='off'
          change_is='on'
          state_value=1
          t1.style.display='none'
        }
    
        var label_state=document.getElementById('device_id')
        label_state.innerText=device_name +' is ' +is_on
        document.getElementById('change_state1').innerText=' Turn '+change_is+' Device'

        var checkbox=document.getElementById('change_state')
        

        var in_pressmode=document.getElementById('psm')
        var in_psm=document.getElementById('psm1')
        var in_reqular=document.getElementById('reqular0')
        var more_options=document.getElementById('more_options')
        if(data.mode=='press_mode'){
          in_pressmode.checked=true

          in_reqular=false
          in_psm.checked=false
          var r1=document.getElementById('more_options')
          r1.style.display='none'
        }
        if(data.mode=='psm'){
          more_options.style.display='block'
          in_pressmode=false
          in_reqular=false
          in_psm.checked=true
          document.getElementById('sample_rate_label').innerText='Choose sample rate(hours)'
          document.getElementById('amount').value=data.sample_rate
          document.getElementById('amount').min=1
          document.getElementById('amount').max=6
        }
        if(data.mode=='reqular'){
          in_reqular.checked=true

          in_pressmode=false
          
          in_psm.checked=false
          more_options.style.display='block'

          document.getElementById('sample_rate_label').innerText='Choose sample rate(seconds)'
          document.getElementById('amount').value=data.sample_rate
            document.getElementById('amount').min=15
          document.getElementById('amount').max=100
       }


})




</script>